dofile (solution().basedir .. "/build/qt4.lua")

project "ProjectExplorer"
kind "SharedLib"
language "C++"

qt4.QtPre()

qt4.CONFIG { "plugin" }

qt4.INSTALL_DIRECTORY (solution().basedir .. "/" .. os.getenv("QT_PLUGINS_DIRECTORY") .. "/qtcreator/plugins")

qt4.QT { "core", "gui", "xml", "script", "declarative" }

--include(projectexplorer_dependencies.pri)
--include(customwizard/customwizard.pri)

includedirs
{
      "."
    , ".."
    , "customwizard"
    , solution().basedir .. "/src"
    , solution().basedir .. "/src/libs"
    , solution().basedir .. "/src/libs/utils"
}

qt4.HEADERS 
{
      "projectexplorer.h"
    , "abi.h"
    , "abiwidget.h"
    , "clangparser.h"
    , "gcctoolchain.h"
    , "projectexplorer_export.h"
    , "projectwindow.h"
    , "buildmanager.h"
    , "buildsteplist.h"
    , "compileoutputwindow.h"
    , "deployconfiguration.h"
    , "deployconfigurationmodel.h"
    , "namedwidget.h"
    , "target.h"
    , "targetsettingspanel.h"
    , "task.h"
    , "itaskhandler.h"
    , "copytaskhandler.h"
    , "showineditortaskhandler.h"
    , "showoutputtaskhandler.h"
    , "vcsannotatetaskhandler.h"
    , "taskwindow.h"
    , "taskmodel.h"
    , "projectfilewizardextension.h"
    , "session.h"
    , "dependenciespanel.h"
    , "allprojectsfilter.h"
    , "ioutputparser.h"
    , "projectconfiguration.h"
    , "gnumakeparser.h"
    , "projectexplorerconstants.h"
    , "projectexplorersettings.h"
    , "corelistenercheckingforrunningbuild.h"
    , "project.h"
    , "pluginfilefactory.h"
    , "iprojectmanager.h"
    , "currentprojectfilter.h"
    , "allprojectsfind.h"
    , "buildstep.h"
    , "buildconfiguration.h"
    , "iprojectproperties.h"
    , "buildsettingspropertiespage.h"
    , "environmentwidget.h"
    , "processstep.h"
    , "editorconfiguration.h"
    , "editorsettingspropertiespage.h"
    , "runconfiguration.h"
    , "applicationlauncher.h"
    , "applicationrunconfiguration.h"
    , "runsettingspropertiespage.h"
    , "projecttreewidget.h"
    , "foldernavigationwidget.h"
    , "customexecutablerunconfiguration.h"
    , "buildprogress.h"
    , "projectnodes.h"
    , "sessiondialog.h"
    , "projectwizardpage.h"
    , "buildstepspage.h"
    , "removefiledialog.h"
    , "nodesvisitor.h"
    , "projectmodels.h"
    , "currentprojectfind.h"
    , "toolchain.h"
    , "toolchainconfigwidget.h"
    , "toolchainmanager.h"
    , "toolchainoptionspage.h"
    , "cesdkhandler.h"
    , "gccparser.h"
    , "debugginghelper.h"
    , "projectexplorersettingspage.h"
    , "projectwelcomepage.h"
    , "baseprojectwizarddialog.h"
    , "miniprojecttargetselector.h"
    , "targetselector.h"
    , "targetsettingswidget.h"
    , "doubletabwidget.h"
    , "buildenvironmentwidget.h"
    , "ldparser.h"
    , "linuxiccparser.h"
    , "runconfigurationmodel.h"
    , "buildconfigurationmodel.h"
    , "processparameters.h"
    , "abstractprocessstep.h"
    , "taskhub.h"
    , "localapplicationruncontrol.h"
    , "customexecutableconfigurationwidget.h"
    , "metatypedeclarations.h"
    , "publishing/publishingwizardselectiondialog.h"
    , "publishing/ipublishingwizardfactory.h"
    , "headerpath.h"
    , "gcctoolchainfactories.h"
    , "appoutputpane.h"
    , "codestylesettingspropertiespage.h"
    , "settingsaccessor.h"
    , "environmentitemswidget.h"
    , "devicesupport/idevice.h"
    , "devicesupport/desktopdevice.h"
    , "devicesupport/desktopdevicefactory.h"
    , "devicesupport/idevicewidget.h"
    , "devicesupport/idevicefactory.h"
    , "devicesupport/devicemanager.h"
    , "devicesupport/devicemanagermodel.h"
    , "devicesupport/devicefactoryselectiondialog.h"
    , "devicesupport/devicesettingswidget.h"
    , "devicesupport/devicesettingspage.h"
    , "appoutputpane.cpp"
    , "foldernavigationwidget.cpp"
    , "taskwindow.cpp"
    , "customwizard/customwizard.h"
    , "customwizard/customwizardpage.h"
    , "customwizard/customwizardparameters.h"
    , "customwizard/customwizardpreprocessor.h"
    , "customwizard/customwizardscriptgenerator.h"
}


files
{
      "projectexplorer.cpp"
    , "abi.cpp"
    , "abiwidget.cpp"
    , "clangparser.cpp"
    , "gcctoolchain.cpp"
    , "projectwindow.cpp"
    , "buildmanager.cpp"
    , "buildsteplist.cpp"
    , "compileoutputwindow.cpp"
    , "deployconfiguration.cpp"
    , "deployconfigurationmodel.cpp"
    , "namedwidget.cpp"
    , "target.cpp"
    , "targetsettingspanel.cpp"
    , "ioutputparser.cpp"
    , "projectconfiguration.cpp"
    , "gnumakeparser.cpp"
    , "task.cpp"
    , "copytaskhandler.cpp"
    , "showineditortaskhandler.cpp"
    , "showoutputtaskhandler.cpp"
    , "vcsannotatetaskhandler.cpp"
    , "taskwindow.cpp"
    , "taskmodel.cpp"
    , "projectfilewizardextension.cpp"
    , "session.cpp"
    , "dependenciespanel.cpp"
    , "allprojectsfilter.cpp"
    , "currentprojectfilter.cpp"
    , "allprojectsfind.cpp"
    , "project.cpp"
    , "pluginfilefactory.cpp"
    , "buildstep.cpp"
    , "buildconfiguration.cpp"
    , "buildsettingspropertiespage.cpp"
    , "environmentwidget.cpp"
    , "processstep.cpp"
    , "abstractprocessstep.cpp"
    , "editorconfiguration.cpp"
    , "editorsettingspropertiespage.cpp"
    , "runconfiguration.cpp"
    , "applicationlauncher.cpp"
    , "applicationrunconfiguration.cpp"
    , "runsettingspropertiespage.cpp"
    , "projecttreewidget.cpp"
    , "foldernavigationwidget.cpp"
    , "customexecutablerunconfiguration.cpp"
    , "buildprogress.cpp"
    , "projectnodes.cpp"
    , "sessiondialog.cpp"
    , "projectwizardpage.cpp"
    , "buildstepspage.cpp"
    , "removefiledialog.cpp"
    , "nodesvisitor.cpp"
    , "projectmodels.cpp"
    , "currentprojectfind.cpp"
    , "toolchain.cpp"
    , "toolchainconfigwidget.cpp"
    , "toolchainmanager.cpp"
    , "toolchainoptionspage.cpp"
    , "cesdkhandler.cpp"
    , "gccparser.cpp"
    , "debugginghelper.cpp"
    , "projectexplorersettingspage.cpp"
    , "projectwelcomepage.cpp"
    , "corelistenercheckingforrunningbuild.cpp"
    , "baseprojectwizarddialog.cpp"
    , "miniprojecttargetselector.cpp"
    , "targetselector.cpp"
    , "targetsettingswidget.cpp"
    , "doubletabwidget.cpp"
    , "buildenvironmentwidget.cpp"
    , "ldparser.cpp"
    , "linuxiccparser.cpp"
    , "runconfigurationmodel.cpp"
    , "buildconfigurationmodel.cpp"
    , "taskhub.cpp"
    , "processparameters.cpp"
    , "localapplicationruncontrol.cpp"
    , "customexecutableconfigurationwidget.cpp"
    , "publishing/publishingwizardselectiondialog.cpp"
    , "appoutputpane.cpp"
    , "codestylesettingspropertiespage.cpp"
    , "settingsaccessor.cpp"
    , "environmentitemswidget.cpp"
    , "devicesupport/idevice.cpp"
    , "devicesupport/desktopdevice.cpp"
    , "devicesupport/desktopdevicefactory.cpp"
    , "devicesupport/devicemanager.cpp"
    , "devicesupport/devicemanagermodel.cpp"
    , "devicesupport/devicefactoryselectiondialog.cpp"
    , "devicesupport/devicesettingswidget.cpp"
    , "devicesupport/devicesettingspage.cpp"
    , "customwizard/customwizard.cpp"
    , "customwizard/customwizardparameters.cpp"
    , "customwizard/customwizardpage.cpp"
    , "customwizard/customwizardpreprocessor.cpp"
    , "customwizard/customwizardscriptgenerator.cpp"
}

qt4.FORMS 
{
      "processstep.ui"
    , "toolchainoptionspage.ui"
    , "editorsettingspropertiespage.ui"
    , "sessiondialog.ui"
    , "projectwizardpage.ui"
    , "removefiledialog.ui"
    , "projectexplorersettingspage.ui"
    , "targetsettingswidget.ui"
    , "doubletabwidget.ui"
    , "publishing/publishingwizardselectiondialog.ui"
    , "codestylesettingspropertiespage.ui"
    , "devicesupport/devicefactoryselectiondialog.ui"
    , "devicesupport/devicesettingswidget.ui"
}

if (os.is("windows")) then

    files
    {
          "windebuginterface.cpp"
        , "msvcparser.cpp"
        , "msvctoolchain.cpp"
        , "abstractmsvctoolchain.cpp"
        , "wincetoolchain.cpp"
    }
    
    qt4.HEADERS 
    {
          "windebuginterface.h"
        , "msvcparser.h"
        , "msvctoolchain.h"
        , "abstractmsvctoolchain.h"
        , "wincetoolchain.h"
    }

end

substitutes.Add("QTCREATOR_VERSION", "2.3.1")
qt4.SUBSTITUTE("ProjectExplorer.pluginspec.in")
qt4.INSTALL 
{ 
      "ProjectExplorer.pluginspec"
    , solution().basedir .. "/bin/libProjectExplorer*.so"
    , solution().basedir .. "/bin/ProjectExplorer*.dll"
}

links 
{
      "Utils"
    , "Core"
    , "Find"
    , "TextEditor"
    , "Locator"
    , "extensionsystem"
    , "aggregation"
}

qt4.RESOURCES { "projectexplorer.qrc" }

defines
{
      "QTC_CPU=X86Architecture"
    , "PROJECTEXPLORER_LIBRARY"
}

qt4.Configure()
Configure()
